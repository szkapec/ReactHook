{"version":3,"sources":["components/ExpenseItem.js","components/ExpenseList.js","components/ExpenseForm.js","components/Alert.js","App.js","serviceWorker.js","index.js"],"names":["ExpenseItem","expense","handleEdit","handleDelete","id","charge","amount","StyledLi","className","StyledSpan","StyledImg","StyledButton","area-label","onClick","StyledButton2","styled","button","div","li","span","ExpenseList","expenses","clearItems","StyledUl","map","key","length","ul","ExpenseForm","handleCharge","handleAmount","handleSubmit","edit","onSubmit","StyledForm","htmlFor","StyledInput","type","name","placeholder","value","onChange","style","border","backgroundColor","input","Alert","text","initialExpenses","localStorage","getItem","JSON","parse","App","useState","setExpenses","setCharge","setAmount","show","alert","setAlert","setEdit","idd","setId","useEffect","setItem","stringify","handleAlert","setTimeout","StyledH1","StyledMain","e","target","preventDefault","tempExpenses","item","console","log","subgleExpense","uuid","tempDelete","filter","find","reduce","suma","nast","parseFloat","main","h1","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9d22198f.chunk.js","sourcesContent":["import React from 'react'\r\nimport {MdEdit, MdDelete} from 'react-icons/md';\r\nimport styled from 'styled-components';\r\n\r\nexport default function ExpenseItem({expense,handleEdit,handleDelete}) {\r\n    const {id, charge, amount} = expense\r\n    return (\r\n        <StyledLi className=\"item\">\r\n            <span className=\"expense\">{charge}</span>\r\n            <StyledSpan className=\"amount\">{amount}zł</StyledSpan>\r\n            <StyledImg>\r\n                <StyledButton className=\"edit-btn\" area-label=\"edit button\" onClick={()=>handleEdit(id)}><MdEdit/></StyledButton>\r\n                <StyledButton2 className=\"clear-btn\" area-label=\"delete button\" onClick={()=>handleDelete(id)}><MdDelete/></StyledButton2>\r\n            </StyledImg>\r\n        </StyledLi>\r\n    )\r\n}\r\nconst StyledButton = styled.button`\r\n    margin-left: 5px;\r\n    border: none;\r\n    background-color: yellow;\r\n    height: 30px;\r\n    width: 30px;\r\n    border-radius: 10px;\r\n`\r\nconst StyledButton2 = styled.button`\r\n    margin-left: 5px;\r\n    border: none;\r\n    background-color: red;\r\n    height: 30px;\r\n    width: 30px;\r\n    border-radius: 10px;\r\n`\r\n\r\nconst StyledImg = styled.div`\r\n    padding-right: 20px;\r\n`\r\n\r\nconst StyledLi = styled.li`\r\n\r\ndisplay: grid;\r\ngrid-template-columns: 1fr 50px 90px;\r\ngrid-template-rows: 1fr;\r\ngrid-column-gap: 0px;\r\ngrid-row-gap: 0px;\r\nmargin: 20px 10px;\r\n/* border: 1px solid black; */\r\npadding: 10px 0 10px 5px;\r\nborder-radius: 5px;\r\n/* box-shadow: 0px 0px 16px 9px rgba(117,115,117,1); */\r\nbox-shadow: 0px 0px 11px 0px rgba(117,115,117,1);\r\nfont-size: 12px;\r\n\r\n:hover {\r\n    box-shadow: 0px 0px 16px 10px rgba(117,115,117,1);\r\n    font-size: 13px;\r\n}\r\nspan{ \r\nborder-right:1px solid green;\r\nline-height: 20px;\r\n}\r\n\r\n@media(min-width: 500px) {\r\n    grid-template-columns: 1fr 150px 90px;\r\n    padding: 10px 0 10px 20px;\r\n    margin: 30px 30px;\r\n}\r\n\r\n@media(min-width: 800px) {\r\n    font-size: 14px;\r\n}\r\n`\r\n\r\nconst StyledSpan = styled.span`\r\n    text-align: center;\r\n    font-weight: 700;\r\n`","import React from 'react'\r\nimport Item from './ExpenseItem';\r\nimport {MdDelete} from 'react-icons/md';\r\nimport styled from 'styled-components';\r\n\r\nexport default function ExpenseList({expenses, handleEdit,handleDelete,clearItems}) {\r\n    return (\r\n        <>\r\n        \r\n        <StyledUl className=\"list\">\r\n            {expenses.map(expense => {\r\n                return <Item handleEdit={handleEdit} handleDelete={handleDelete} key={expense.id} expense={expense}/>\r\n            })}\r\n        </StyledUl>\r\n        \r\n        {expenses.length>0 && <StyledButton className=\"btn\" onClick={clearItems}>Wyczyść<MdDelete className=\"btn-icon\" /></StyledButton>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst StyledUl = styled.ul`\r\n    text-decoration: none;\r\n    list-style: none;\r\n    padding: 0;\r\n\r\n`\r\n\r\nconst StyledButton = styled.button`\r\n        border: none;\r\n    padding: 5px 15px;\r\n    font-size: 12px;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    color: black;\r\n\r\n    margin: 5px auto;\r\n    font-weight: 700;\r\n    border: 2px solid green;\r\n    margin-left: 10px;\r\n    .btn-icon {\r\n        margin-left: 10px;\r\n}\r\n@media(min-width:500px) {\r\n        margin: 10px 30px;\r\n    }\r\n`\r\n","import React from 'react'\r\nimport {MdSend} from 'react-icons/md'\r\nimport styled from 'styled-components';\r\nexport default function ExpenseForm({charge,amount,handleCharge,handleAmount,handleSubmit, edit}) {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <StyledForm>\r\n            <div className=\"form-center\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"charge\">\r\n                        <StyledInput type=\"text\" className=\"form-control\" id=\"charge\" name=\"charge\" placeholder=\"produkt\" value={charge} onChange={handleCharge}></StyledInput>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"\">\r\n                    <label htmlFor=\"amount\">\r\n                        <StyledInput type=\"text\" className=\"form-control\" id=\"amount\" name=\"amount\" placeholder=\"cena\" value={amount} onChange={handleAmount}></StyledInput>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            </StyledForm>\r\n            <StyledButton type=\"submit\" style={edit?{border:'3px solid yelow', backgroundColor:'yellow'}:null} className=\"btn\">{edit?'Edytuj':\"Wyślij\"}<MdSend className=\"btn-icon\"/></StyledButton>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst StyledForm = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n    width: 200px;\r\n    padding: 5px 15px;  \r\n    margin: 10px;\r\n    border-radius:10px;\r\n    border: 2px solid green;\r\n    @media (min-width: 400px){\r\n        width: 250px;\r\n    }\r\n    @media(min-width:500px) {\r\n        margin: 10px 30px;\r\n    }\r\n    @media (min-width: 700px){\r\n        width: 300px;\r\n    }\r\n\r\n\r\n`\r\nconst StyledButton = styled.button`\r\n    border: none;\r\n    padding: 5px 15px;\r\n    font-size: 12px;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n\r\n    color: black;\r\n    border: 2px solid green;\r\n    margin: 5px auto;\r\n    font-weight: 700;\r\n    margin-left: 10px;\r\n    @media(min-width:500px) {\r\n        margin: 10px 30px;\r\n    }\r\n    .btn-icon {\r\n        margin-left: 10px;\r\n\r\n}\r\n`","import React from 'react'\r\n\r\nexport default function Alert({type,text}) {\r\n    return (\r\n        <div className={`alert alert-${type}`}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport ExpenseList from './components/ExpenseList'\nimport ExpenseForm from './components/ExpenseForm'\nimport Alert from './components/Alert'\nimport uuid from 'uuid/v4'; //dlugi indywidualny identyfikator xd\nimport styled from 'styled-components';\nconst initialExpenses = localStorage.getItem(\"expenses\") ? JSON.parse(localStorage.getItem(\"expenses\")) : [];\n// const orders = [31.54,19.99,4.55];\n// // console.log(orders.reduce((zwroconaZKazdegoCollbacku, amout) => zwroconaZKazdegoCollbacku+amout))\n// // console.log(orders.reduce((zwroconaZKazdegoCollbacku, amout, index , array) => array.length))\n// const numbers = [1,2,3,3,4]\n// let aa = new Set(numbers).size //elementy bez duplikatow\n// console.log(aa)\n\n\n\nfunction App() {\n   const [expenses, setExpenses] = useState(initialExpenses)\n   const [charge, setCharge] = useState('');//zamiast stanu z pusty ciagiem zapisywany jest e.target.value\n   let [amount, setAmount] = useState('');\n   const [alert, setAlert] = useState({show: false})\n   const [edit, setEdit] = useState(false)\n   const [idd, setId] = useState(0)\n\n  useEffect(()=> {\n    localStorage.setItem('expenses', JSON.stringify(expenses))\n  },[expenses])\n\n   const handleCharge = e => {\n    setCharge(e.target.value);\n  }\n  const handleAmount = e => {\n    setAmount(e.target.value);\n  }\n  const handleAlert = ({type,text}) => {\n    setAlert({show:true,type,text})\n    setTimeout(()=> {\n      setAlert({show:false})\n    }, 3000)\n  }\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(charge !== \"\"){\n     \n      if(amount===\"\"){\n        amount=0;\n      }\n      if(edit) {\n        let tempExpenses = expenses.map(item => {\n          console.log(item)\n          return item.id === idd ? {...item, charge:charge, amount:amount} : item //item:idnie pasuje\n        })\n        setExpenses(tempExpenses)\n        setEdit(false)\n        handleAlert({type:'success', text:\"Edytowano prawidłowo\"})\n      }\n      else{\n        const subgleExpense = {id:uuid(), charge:charge, amount}\n        setExpenses([...expenses, subgleExpense])\n        handleAlert({type:'success', text:\"Dodano artykuł\"})\n      }\n\n\n      setCharge(\"\");\n      setAmount(\"\");\n    }\n    else{\n      handleAlert({type:'danger', text:`charge can be empty value and amount value has to be bigger than zero`})\n    }\n  }\n\n  const clearItems = () => {\n    setExpenses([])\n  }\n  const handleDelete = (id) => {\n    let tempDelete = expenses.filter(item => item.id !== id)\n    setExpenses(tempDelete)\n    handleAlert({type:\"danger\", text:'Usunięto prawidłowo'})\n  }\n  const handleEdit = (id) => {\n    console.log(`item edit ${id}`) //tylko id\n    let expense = expenses.find(item => item.id === id) //caly obiekt\n\n    setCharge(expense.charge) //nazwa\n    setAmount(expense.amount) //pieniadz\n    setEdit(true);\n    setId(id)\n    \n  }\n\n  return (\n    <div>\n      {alert.show&&<Alert type={alert.type} text={alert.text}/>}\n      <StyledH1>Lista zakupów</StyledH1>\n      <StyledMain className=\"App\">\n      <ExpenseForm charge={charge} amount={amount} handleAmount={handleAmount} handleCharge={handleCharge} handleSubmit={handleSubmit} edit={edit} ></ExpenseForm>\n      <ExpenseList expenses={expenses} clearItems={clearItems} handleDelete={handleDelete} handleEdit={handleEdit}></ExpenseList>\n      <StyledH1>Koszt całkowity: <span className=\"total\">{expenses.reduce((suma,nast)=> {return(suma+=parseFloat(nast.amount))},0)}zł</span></StyledH1> \n      </StyledMain>\n       \n    </div>\n  );\n}\n\nexport default App;\n\nconst StyledMain = styled.main`\n    width: 90%;\n    margin: 20px 5%;\n    background-color: #ecf0f1;\n    border-radius: 10px;\n    \n    @media(min-width: 800px){\n      max-width: 800px;\n      margin: 20px auto;\n    }\n\n`\n\nconst StyledH1 = styled.h1`\n  font-size: 20px;\n  font-weight:700;\n  text-align: center;\n  padding: 20px 0;\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}